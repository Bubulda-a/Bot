from typing import Union

from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards import kb

router = Router(name="–û–±—â–∏–µ —Ñ—É–Ω–∫—Ü")


class VideoStates(StatesGroup):
    waiting_for_photo = State()
    waiting_for_prompt = State()
    waiting_for_generation = State()


async def show_welcome_message(target: Union[Message, CallbackQuery]):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç Google Veo 3 ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò.\n"
        "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Äî –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º (.....)\n"
        "üíé –û—Å—Ç–∞–ª–æ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: 0\n"
        "–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?"
    )

    if isinstance(target, CallbackQuery):
        await target.message.edit_text(
            text=text,
            reply_markup=kb.inline_kb1
        )
        await target.answer()
    else:
        await target.answer(
            text=text,
            reply_markup=kb.inline_kb1
        )


@router.message(Command("start"))
async def cmd_start(message: Message):
    await show_welcome_message(message)


@router.callback_query(F.data == "Back")
async def handle_back_button(callback: CallbackQuery):
    await show_welcome_message(callback)


@router.message(Command("help"))
async def send_help(message: Message):
    await message.reply(
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/gen_vid - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ\n"
        "/profile - –ü—Ä–æ—Ñ–∏–ª—å\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    )


@router.callback_query(F.data == "generate_from_text")
async def handle_generate_from_text(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text(
        text=f"üí° –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ:",
        reply_markup=kb.inline_kb2
    )

    await state.set_state(VideoStates.waiting_for_prompt)


@router.callback_query(F.data == "generate_from_photo")
async def handle_generate_from_text(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text(
        text=f"üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏—Å—Ö–æ–¥–Ω–∏–∫:",
        reply_markup=kb.inline_kb2
    )

    await state.set_state(VideoStates.waiting_for_photo)


@router.callback_query(F.data == "cash")
async def handle_generate_from_text(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text(
        text=f"üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üí∞\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=kb.inline_kb2
    )


@router.message()
async def handle_other_messages(message: types.Message):
    await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")


@router.message(Command("help"))
async def send_help(message: Message):
    await message.reply("–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n"
                        "/start - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
                        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                        "/gen_vid - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ\n"
                        "/login - –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç\n"
                        )
